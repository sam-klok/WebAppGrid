@model IEnumerable<WebAppGrid.Models.Person>
@using WebAppGrid.Helpers
@using GridMvc.Html

@{
    ViewBag.Title = "Index Demo of Grid.MVC component";
}

<div class="row">
    <div class="col-md-12">
        @Html.Grid(Model).Named("PeopleGrid").Columns(c =>
   {
       c.Add(x => x.Name).Titled("Name").Filterable(true).Sortable(true);
       c.Add(x => x.Age).Titled("Age").Filterable(true).Sortable(true);
       c.Add(x => x.DOB.Date).Titled("Date of Birth").Filterable(true).Sortable(true);
       c.Add(x => x.SchoolGraduationDateOnly).Titled("Date of Grad").Filterable(true).Sortable(true).Format("{0:d}");

       //c.Add(x => x.SchoolGraduation).Titled("Date of Grad").Filterable(true).Sortable(true).Format("{0:d}");
       //c.Add(x => x.SchoolGraduationDate == null ? (DateTime?)null : x.SchoolGraduationDate).Titled("Date of Grad").Filterable(true).Sortable(true).Format("{0:d}");
       //c.Add(x => x.HasKids).Titled("Has Kids").Filterable(true).Sortable(true);  // display as true-false text

       c.Add(x => x.HasKids).Titled("Has Kids").Filterable(true).Encoded(false).Sanitized(false).SetWidth(20).RenderValueAs(o => Html.CheckBox("cb" + o.Id, o.HasKids));

       //Let's use onClick javascript, which may be prohibited by Content Security Policy (CSP)
       //c.Add()
       // .Titled("To Delete")
       // .Encoded(false)
       // .Sanitized(false)
       // .SetWidth(30)
       // .RenderValueAs(o => Html.CheckBox("cbxToDelete" + o.Id, false, new { name = "selectedIds", @class = "cToDel1", value = o.Id, OnClick = "pageIndex.toStorage(this,'" + o.Id + "');" }));

       //c.Add().Titled("<input name='allChk' type='checkbox'/>").Encoded(false).Sanitized(false).SetWidth(30).RenderValueAs(o => Html.CheckBox("checked", false, new { name = "selectedIds", value = o.Name, OnClick = "selectedCheckbox(this,'" + o.Name + "');" }));

       c.Add()
        .Titled("<input type='checkbox' id='cbxSelectAll' name='cbxSelectAll'> To Delete")
        .Encoded(false)
        .Sanitized(false)
        .SetWidth(30)
        .RenderValueAs(o => Html.CheckBox("cbxToDelete" + o.Id, false, new { name = "selectedIds", @class="cbToDel", value = o.Id }));

   }).WithPaging(5).EmptyText("No data found")

        @*.Filterable(true).WithMultipleFilters()*@
    </div>
    <div>
        <button onclick="pageIndex.showCheckedRecords()">Show checked records</button>
    </div>
</div>

@Styles.Render("~/Content/Gridmvc")

@section scripts{
    @Scripts.Render("~/bundles/Gridmvc")
    <script>
        var model = @Html.Raw(Json.Encode(Model));
    </script>
    <script src="~/Scripts/Home/pageIndex.js"></script>
}

